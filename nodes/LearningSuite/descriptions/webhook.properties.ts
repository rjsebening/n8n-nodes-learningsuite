import type { INodeProperties } from 'n8n-workflow';

export const webhookProperties: INodeProperties[] = [
	{
		displayName: 'Operation',
		name: 'operation',
		type: 'options',
		noDataExpression: true,
		default: 'getSubscriptions',
		displayOptions: { show: { resource: ['webhook'] } },
		options: [
			{
				name: 'Create Webhook Subscription',
				value: 'createSubscription',
				description: 'Create a webhook subscription to receive events',
				action: 'Create webhook subscription',
			},
			{
				name: 'Delete Webhook Subscription',
				value: 'deleteSubscription',
				description: 'Delete a webhook subscription by ID',
				action: 'Delete webhook subscription',
			},
			{
				name: 'Get Webhook Sample Data',
				value: 'getSampleData',
				description: 'Retrieve sample payloads for supported webhook events',
				action: 'Get webhook sample data',
			},
			{
				name: 'Get Webhook Subscription',
				value: 'getSubscription',
				description: 'Get a webhook subscription by ID',
				action: 'Get webhook subscription',
			},
			{
				name: 'Get Webhook Subscriptions',
				value: 'getSubscriptions',
				description: 'List webhook subscriptions',
				action: 'Get webhook subscriptions',
			},
			{
				name: 'Update Webhook Subscription',
				value: 'updateSubscription',
				description: 'Update a webhook subscription',
				action: 'Update webhook subscription',
			},
		],
	},
	{
		displayName: 'Hook URL',
		name: 'hookUrl',
		type: 'string',
		displayOptions: { show: { resource: ['webhook'], operation: ['createSubscription', 'updateSubscription'] } },
		default: '',
		required: true,
		placeholder: 'https://your-endpoint.com/webhook',
		description: 'URL to send webhook events to',
	},
	{
		displayName: 'Event Type',
		name: 'eventType',
		type: 'options',
		required: true,
		default: 'new.login',
		displayOptions: { show: { resource: ['webhook'], operation: ['createSubscription', 'updateSubscription'] } },
		options: [
			{ name: 'Community Post Created', value: 'communityPost.created' },
			{ name: 'Community Post Moderated', value: 'communityPost.moderated' },
			{ name: 'Custom Popup Interaction', value: 'custom.popup.interaction' },
			{ name: 'Exam Completed', value: 'exam.completed' },
			{ name: 'Exam Graded', value: 'exam.graded' },
			{ name: 'Feedback Created', value: 'feedback.created' },
			{ name: 'Group User Access Changed', value: 'group.userAccessChanged' },
			{ name: 'Lesson Completed', value: 'lesson.completed' },
			{ name: 'New Login', value: 'new.login' },
			{ name: 'Progress Changed', value: 'progress.changed' },
		],
		description: 'Type of event to subscribe to',
	},
	{
		displayName: 'Sample Data Type',
		name: 'sampleDataType',
		type: 'options',
		default: 'feedback-events',
		displayOptions: { show: { resource: ['webhook'], operation: ['getSampleData'] } },
		options: [
			{ name: 'Community Post Created Events', value: 'community-post-created-events' },
			{ name: 'Community Post Moderated Events', value: 'community-post-moderated-events' },
			{ name: 'Custom Popup Interaction Events', value: 'custom-popup-interaction-events' },
			{ name: 'Exam Completed Events', value: 'exam-completed-events' },
			{ name: 'Exam Graded Events', value: 'exam-graded-events' },
			{ name: 'Feedback Events', value: 'feedback-events' },
			{ name: 'Group User Access Changed Events', value: 'group-user-access-changed-events' },
			{ name: 'Lesson Completed Events', value: 'lesson-completed-events' },
			{ name: 'New Login Events', value: 'new-login-events' },
			{ name: 'Progress Changed Events', value: 'progress-changed-events' },
		],
		required: true,
		description: 'Type of sample data to retrieve',
	},
	{
		displayName: 'Subscription Name or ID',
		name: 'subscriptionId',
		type: 'options',
		displayOptions: {
			show: { resource: ['webhook'], operation: ['getSubscription', 'updateSubscription', 'deleteSubscription'] },
		},
		typeOptions: { loadOptionsMethod: 'webhook_getSubscriptions' },
		default: '',
		required: true,
		description:
			'ID of the webhook subscription. Choose from the list, or specify an ID using an <a href="https://docs.n8n.io/code/expressions/">expression</a>.',
	},
];
