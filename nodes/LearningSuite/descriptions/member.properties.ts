import type { INodeProperties } from 'n8n-workflow';

export const memberProperties: INodeProperties[] = [
	{
		displayName: 'Operation',
		name: 'operation',
		type: 'options',
		noDataExpression: true,
		default: 'getByEmail',
		displayOptions: { show: { resource: ['member'] } },
		options: [
			{
				name: 'Activate/Deactivate Member',
				value: 'activateDeactivate',
				description: 'Enable or disable a member account',
				action: 'Activate deactivate member',
			},
			{
				name: 'Add Bundles to Member',
				value: 'addToBundles',
				description: 'Grant one or more bundles to a member',
				action: 'Add member to bundles',
			},
			{
				name: 'Add Courses to Member',
				value: 'addToCourses',
				description: 'Add one or more courses to a member',
				action: 'Add member to courses',
			},
			{ name: 'Create Member', value: 'create', description: 'Create a new member', action: 'Create a member' },
			{ name: 'Delete Member', value: 'delete', description: 'Delete a member by ID', action: 'Delete a member' },
			{
				name: 'Find or Create Member',
				value: 'findOrCreate',
				description: 'Find a member by email or create it if not found',
				action: 'Find or create member',
			},
			{
				name: 'Get Course Information of Member',
				value: 'getCourseInfo',
				description: 'Check access and progress of a member for a specific course',
				action: 'Get member course info',
			},
			{
				name: 'Get Many',
				value: 'getAll',
				description: 'List members with optional filters',
				action: 'Get many members',
			},
			{
				name: 'Get Member Bundles',
				value: 'getBundles',
				description: 'List bundles a member has access to',
				action: 'Get member bundles',
			},
			{
				name: 'Get Member by Email',
				value: 'getByEmail',
				description: 'Get a member by email address',
				action: 'Get member by email',
			},
			{ name: 'Get Member by ID', value: 'getById', description: 'Get a member by ID', action: 'Get member by ID' },
			{
				name: 'Get Member Courses',
				value: 'getCourses',
				description: 'List all courses for a member with access and progress information',
				action: 'Get member courses',
			},
			{
				name: 'Remove Bundles From Member',
				value: 'removeFromBundles',
				description: 'Revoke one or more bundles from a member',
				action: 'Remove member from bundles',
			},
			{
				name: 'Remove Courses From Member',
				value: 'removeFromCourses',
				description: 'Remove one or more courses from a member',
				action: 'Remove member from courses',
			},
			{ name: 'Update Member', value: 'update', description: 'Update fields of a member', action: 'Update a member' },
		],
	},
	{
		displayName: 'Member Name or ID',
		name: 'memberId',
		type: 'options',
		displayOptions: {
			show: {
				resource: ['member'],
				operation: [
					'getById',
					'update',
					'delete',
					'activateDeactivate',
					'addToCourses',
					'removeFromCourses',
					'getCourses',
					'getCourseInfo',
					'addToBundles',
					'removeFromBundles',
					'getBundles',
				],
			},
		},
		typeOptions: { loadOptionsMethod: 'member_getMembers' },
		default: '',
		required: true,
		description:
			'ID of the member. Choose from the list, or specify an ID using an <a href="https://docs.n8n.io/code/expressions/">expression</a>.',
	},
	{
		displayName: 'Email',
		name: 'email',
		type: 'string',
		placeholder: 'user@example.com',
		displayOptions: { show: { resource: ['member'], operation: ['getByEmail', 'findOrCreate'] } },
		default: '',
		required: true,
		description: 'Email address of the member to retrieve',
	},
	{
		displayName: 'Email',
		name: 'memberEmail',
		type: 'string',
		placeholder: 'user@example.com',
		displayOptions: { show: { resource: ['member'], operation: ['create'] } },
		default: '',
		required: true,
		description: 'Email address of the member',
	},
	{
		displayName: 'First Name',
		name: 'firstName',
		type: 'string',
		required: true,
		displayOptions: { show: { resource: ['member'], operation: ['create', 'findOrCreate'] } },
		default: '',
		description: 'First name of the member',
	},
	{
		displayName: 'Last Name',
		name: 'lastName',
		type: 'string',
		required: true,
		displayOptions: { show: { resource: ['member'], operation: ['create', 'findOrCreate'] } },
		default: '',
		description: 'Last name of the member',
	},
	{
		displayName: 'Additional Options',
		name: 'additionalOptions',
		type: 'collection',
		placeholder: 'Add Option',
		default: {},
		displayOptions: { show: { resource: ['member'], operation: ['create', 'findOrCreate'] } },
		options: [
			{ displayName: 'About', name: 'about', type: 'string', default: '', description: 'About text for the member' },
			{ displayName: 'City', name: 'city', type: 'string', default: '', description: 'City of the member' },
			{
				displayName: 'Do Not Require Password Change',
				name: 'doNotRequirePasswordChange',
				type: 'boolean',
				default: false, // ‚Üê Beispiel sagt false
				description:
					'Whether the member is not prompted to change their password upon first login, if this option is enabled. This option should only be used if the member has not set a password and should log in using SSO. The default setting is "true," so for privacy reasons, only the member knows their password.',
			},
			{
				displayName: 'Do Not Send Welcome Email',
				name: 'disableLoginEmail',
				type: 'boolean',
				default: false,
				description: 'Whether the member should not receive a welcome login email with a pre-signed login link',
			},
			{
				displayName: 'Ignore If Already Exists',
				name: 'ignoreIfAlreadyExists',
				type: 'boolean',
				default: false,
				description: 'Whether to avoid an error when creating an existing member',
			},

			{
				displayName: 'Locale',
				name: 'locale',
				type: 'options',
				options: [
					{ name: 'German', value: 'de' },
					{ name: 'English', value: 'en' },
				],
				default: 'de',
				description: 'User interface language',
			},
			{ displayName: 'Password', name: 'password', type: 'string', typeOptions: { password: true }, default: '' },
			{ displayName: 'Phone', name: 'phone', type: 'string', default: '', description: 'Phone number of the member' },
			{
				displayName: 'Position',
				name: 'position',
				type: 'string',
				default: '',
				description: 'Position/job title of the member',
			},
		],
	},
	{
		displayName: 'Update Fields',
		name: 'updateFields',
		type: 'collection',
		placeholder: 'Add Field',
		default: {},
		displayOptions: { show: { resource: ['member'], operation: ['update'] } },
		options: [
			{ displayName: 'About', name: 'about', type: 'string', default: '', description: 'About text for the member' },
			{ displayName: 'City', name: 'city', type: 'string', default: '', description: 'City of the member' },
			{
				displayName: 'Email',
				name: 'email',
				type: 'string',
				placeholder: 'name@email.com',
				default: '',
				description: 'Email of the member',
			},
			{
				displayName: 'Enabled',
				name: 'enabled',
				type: 'boolean',
				default: true,
				description: 'Whether the member should be activated or deactivated',
			},
			{
				displayName: 'First Name',
				name: 'firstName',
				type: 'string',
				default: '',
				description: 'First name of the member',
			},
			{
				displayName: 'Last Name',
				name: 'lastName',
				type: 'string',
				default: '',
				description: 'Last name of the member',
			},
			{
				displayName: 'Locale',
				name: 'locale',
				type: 'options',
				options: [
					{ name: 'German', value: 'de' },
					{ name: 'English', value: 'en' },
				],
				default: 'de',
				description: 'User interface language',
			},
			{ displayName: 'Phone', name: 'phone', type: 'string', default: '', description: 'Phone number of the member' },
			{
				displayName: 'Position',
				name: 'position',
				type: 'string',
				default: '',
				description: 'Position/job title of the member',
			},
		],
	},

	{
		displayName: 'Action',
		name: 'activateAction',
		type: 'options',
		displayOptions: { show: { resource: ['member'], operation: ['activateDeactivate'] } },
		options: [
			{ name: 'Activate', value: 'activate' },
			{ name: 'Deactivate', value: 'deactivate' },
		],
		default: 'activate',
		required: true,
		description: 'Whether to activate or deactivate the member',
	},
	{
		displayName: 'Include Groups',
		name: 'includeGroups',
		type: 'boolean',
		displayOptions: { show: { resource: ['member'], operation: ['getById', 'getAll'] } },
		default: false,
		description: 'Whether to include group information in the response',
	},
	{
		displayName: 'Additional Options',
		name: 'additionalOptions',
		type: 'collection',
		default: {},
		placeholder: 'Add Option',
		displayOptions: { show: { resource: ['member'], operation: ['getAll'] } },
		options: [
			{
				displayName: 'Days Not Logged In (GTE)',
				name: 'daysNotLoggedInGte',
				type: 'number',
				default: 7,
				typeOptions: { minValue: 1, maxValue: 365 },
				description: 'Number of days a member has not logged in (greater than or equal to)',
			},
			{
				displayName: 'Include Never Logged In',
				name: 'includeNeverLoggedIn',
				type: 'boolean',
				default: true,
				description: 'Whether to include members who have never logged in',
			},
		],
	},
	{
		displayName: 'Course Names or IDs',
		name: 'courseIds',
		type: 'multiOptions',
		typeOptions: { loadOptionsMethod: 'course_getCourses' },
		displayOptions: { show: { resource: ['member'], operation: ['addToCourses', 'removeFromCourses'] } },
		default: [],
		description:
			'Select one or more courses. Choose from the list, or specify IDs using an <a href="https://docs.n8n.io/code/expressions/">expression</a>.',
	},
	{
		displayName: 'Additional Options',
		name: 'additionalOptions',
		type: 'collection',
		placeholder: 'Add Option',
		displayOptions: { show: { resource: ['member'], operation: ['addToCourses', 'removeFromCourses'] } },
		default: {},
		options: [
			{
				displayName: 'Disable Access Notification Email',
				name: 'disableAccessNotificationEmail',
				type: 'boolean',
				default: false,
				description: 'Whether the access notification email should be deactivated. Default is false.',
			},
			{
				displayName: 'Send Login Link In Course Email',
				name: 'sendLoginLinkInCourseEmail',
				type: 'boolean',
				default: false,
				description: 'Whether the login link should be sent in the course email. Default is false.',
			},
			{
				displayName: 'Access Given At',
				name: 'accessGivenAt',
				type: 'dateTime',
				default: '',
				description: 'When access should be granted',
			},
		],
	},
	{
		displayName: 'Bundle Names or IDs',
		name: 'bundleIds',
		type: 'multiOptions',
		typeOptions: { loadOptionsMethod: 'bundle_getBundles' },
		displayOptions: { show: { resource: ['member'], operation: ['removeFromBundles'] } },
		default: [],
		required: true,
		description:
			'Select one or more bundles. Choose from the list, or specify IDs using an <a href="https://docs.n8n.io/code/expressions/">expression</a>.',
	},
	{
		displayName: 'Bundle Names or IDs',
		name: 'bundles',
		type: 'multiOptions',
		typeOptions: { loadOptionsMethod: 'bundle_getBundles' },
		displayOptions: { show: { resource: ['member'], operation: ['addToBundles'] } },
		default: [],
		required: true,
		description:
			'Select one or more bundles. Choose from the list, or specify IDs using an <a href="https://docs.n8n.io/code/expressions/">expression</a>.',
	},
	{
		displayName: 'Additional Options',
		name: 'additionalOptions',
		type: 'collection',
		placeholder: 'Add Option',
		displayOptions: { show: { resource: ['member'], operation: ['addToBundles'] } },
		default: {},
		options: [
			{
				displayName: 'Access Given At Override',
				name: 'accessGivenAtOverride',
				type: 'dateTime',
				default: '',
				description: 'Override the date/time when access is granted',
			},
			{
				displayName: 'Access Until Override',
				name: 'accessUntilOverride',
				type: 'dateTime',
				default: '',
				description: 'Override the date/time when access ends',
			},
			{
				displayName: 'Unlimited Access',
				name: 'unlimitedAccess',
				type: 'boolean',
				default: false,
				description: 'Whether access never expires (overrides ‚ÄúAccess Until Override‚Äù)',
			},
			{
				displayName: 'Disable Access Notification Email',
				name: 'disableAccessNotificationEmail',
				type: 'boolean',
				default: false,
				description: 'Whether the Access Notification Email option should be disabled',
			},
		],
	},
	{
		displayName: 'Course Name or ID',
		name: 'courseId',
		type: 'options',
		typeOptions: { loadOptionsMethod: 'course_getCourses' },
		displayOptions: { show: { resource: ['member'], operation: ['getCourseInfo'] } },
		default: '',
		description:
			'Choose from the list, or specify an ID using an <a href="https://docs.n8n.io/code/expressions/">expression</a>',
	},
];
